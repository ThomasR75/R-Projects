theme(title = element_text(size = 16, face = "bold"))
library(ggridges)
p <- ggplot(data = gss_lon, mapping = aes(x = age, y = factor(year, levels = rev(unique(year)), ordered = TRUE)))
p + geom_density_ridges(alpha = 0.6, fill = "lightblue", scale = 1.5) + scale_x_continuous(breaks = c(25,50,75)) +
scale_y_discrete(expand = c(0.01,0)) +
labs(x = "Age", y = NULL,
title = "Age Distribution of\nGSS Respondents") +
theme_ridges() +
theme(title = element_text(size = 16, face = "bold"))
mean_age <- gss_lon %>% filter(age %nin% NA && year %in% yrs) %>% group_by(year) %>% summarize(xbar = round(mean(age, na.rm = TRUE), 0))
mean_age$y <- 0.3
library(cowplot)
library(hrbrthemes)
{fig.height = 16}
yr_labs <- data.frame(x = 85, y = 0.8, year = yrs)
p <- ggplot(data = subset(gss_lon, year %in% yrs), mapping = aes(x = age))
p1 <- p + geom_density(fill = "gray20", color = FALSE, alpha = 0.9, mapping = aes(y = ..scaled..)) +
geom_vline(data = subset(mean_age, year %in% yrs), aes(xintercept = xbar), color = "white", size = 0.5) +
geom_text(data = subset(mean_age, year %in% yrs), aes(x = xbar, y = y, label = xbar), nudge_x = 7.5, color = "white", size = 3.5, hjust = 1) +
geom_text(data = subset(yr_labs, year %in% yrs), aes(x = x, y = y, label = year)) + facet_grid(year ~ ., switch = "y")
theme_set(theme_base())
p1 + theme(legend.position = "top")
fig.height=15
yr_labs <- data.frame(x = 85, y = 0.8, year = yrs)
p <- ggplot(data = subset(gss_lon, year %in% yrs), mapping = aes(x = age))
p1 <- p + geom_density(fill = "gray20", color = FALSE, alpha = 0.9, mapping = aes(y = ..scaled..)) +
geom_vline(data = subset(mean_age, year %in% yrs), aes(xintercept = xbar), color = "white", size = 0.5) +
geom_text(data = subset(mean_age, year %in% yrs), aes(x = xbar, y = y, label = xbar), nudge_x = 7.5, color = "white", size = 3.5, hjust = 1) +
geom_text(data = subset(yr_labs, year %in% yrs), aes(x = x, y = y, label = year)) + facet_grid(year ~ ., switch = "y")
theme_set(theme_base())
p1 + theme(legend.position = "top")
yrs <- c(seq(1972,1988, 4), 1993, seq(1996,2016,4))
mean_age <- gss_lon %>% filter(age %nin% NA && year %in% yrs) %>% group_by(year) %>% summarize(xbar = round(mean(age, na.rm = TRUE), 0))
mean_age$y <- 0.3
library(cowplot)
library(hrbrthemes)
yrs <- c(seq(1972,1988, 4), 1993, seq(1996,2016,4))
mean_age <- gss_lon %>% filter(age %nin% NA && year %in% yrs) %>% group_by(year) %>% summarize(xbar = round(mean(age, na.rm = TRUE), 0))
mean_age$y <- 0.3
library(cowplot)
library(hrbrthemes)
```{r fig.height=15}
yrs <- c(seq(1972,1988, 4), 1993, seq(1996,2016,4))
mean_age <- gss_lon %>% filter(age %nin% NA && year %in% yrs) %>% group_by(year) %>% summarize(xbar = round(mean(age, na.rm = TRUE), 0))
mean_age$y <- 0.3
library(cowplot)
library(hrbrthemes)
yr_labs <- data.frame(x = 85, y = 0.8, year = yrs)
p <- ggplot(data = subset(gss_lon, year %in% yrs), mapping = aes(x = age))
p1 <- p + geom_density(fill = "gray20", color = FALSE, alpha = 0.9, mapping = aes(y = ..scaled..)) +
geom_vline(data = subset(mean_age, year %in% yrs), aes(xintercept = xbar), color = "white", size = 0.5) +
geom_text(data = subset(mean_age, year %in% yrs), aes(x = xbar, y = y, label = xbar), nudge_x = 7.5, color = "white", size = 3.5, hjust = 1) +
geom_text(data = subset(yr_labs, year %in% yrs), aes(x = x, y = y, label = year)) + facet_grid(year ~ ., switch = "y")
theme_set(theme_base())
p1 + theme(legend.position = "top")
```{r fig.height=15}
library(ggridges)
p <- ggplot(data = gss_lon, mapping = aes(x = age, y = factor(year, levels = rev(unique(year)), ordered = TRUE)))
p + geom_density_ridges(alpha = 0.6, fill = "lightblue", scale = 1.5) + scale_x_continuous(breaks = c(25,50,75)) +
scale_y_discrete(expand = c(0.01,0)) +
labs(x = "Age", y = NULL,
title = "Age Distribution of\nGSS Respondents") +
theme_ridges() +
theme(title = element_text(size = 16, face = "bold"))
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
```{r fig.width=10}
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
```{r fig.width=5}
```{r fig.width=5}
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
p <- ggplot(data = fredts_m, mapping = aes(x = date, y = score, group = series, color = series))
p1 <- p + geom_line() + theme(legend.position = "top") +
labs(x = "Date",
y = "Index",
color = "Series")
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
p <- ggplot(data = fredts_m, mapping = aes(x = date, y = score, group = series, color = series))
p1 <- p + geom_line() + theme(legend.position = "top") +
labs(x = "Date",
y = "Index",
color = "Series")
p <- ggplot(data = fredts_m, mapping = aes(x = date, y = score, group = series, color = series))
p1 <- p + geom_line() + theme(legend.position = "top") +
labs(x = "Date",
y = "Index",
color = "Series")
p1
head(fredts)
fredts_m <- fredts %>% select(date, sp500_i, monbase_i) %>% gather(key = series, value = score, sp500_i:monbase_i)
head(fredts_m)
p <- ggplot(data = fredts_m, mapping = aes(x = date, y = score, group = series, color = series))
p1 <- p + geom_line() + theme(legend.position = "top") +
labs(x = "Date",
y = "Index",
color = "Series")
p1
p <- ggplot(data = fredts_m, mapping = aes(x = date, y = score, group = series, color = series))
p1 <- p + geom_line() + theme(legend.position = "top") +
labs(x = "Date",
y = "Index",
color = "Series")
p <- ggplot(data = fredts, mapping = aes(x=date, y = sp500_i - monbase_i))
p2 <- p + geom_line() + labs(x = "Date",
x = "Difference")
cowplot::plot_grid(p1, p2, nrow = 2, rel_heights = c(0.75, 0.25), align = "v")
head(yahoo)
p <- ggplot(data = yahoo, mapping = aes(x = Employees, y = Revenue))
p + geom_path(color = "gray80") +
geom_text(aes(color = Mayer, label = Year),
size = 3, fontface = "bold") +
theme(legend.position = "bottom") +
labs(color = "Mayer is CEO", x = "Employees", y ="Revenue (Millions)",
title = "Yahoo Employees vs Revenues, 2004-2014") +
scale_y_continuous(labels = scales::dollar) +
scale_x_continuous(labels = scales::comma)
p <- ggplot(data = yahoo, mapping = aes(x = Employees, y = Revenue/Employees))
p + geom_line(color = "gray60", size = 2) +
geom_vline(xintercept = 2012) +
annotate("text", x = 2013, y = 0.44, label = " Mayer becomes CEO", size = 2.5) +
labs(x = "Year\n", y = "Revenue/Employees",
title = "Yahoo Revenue to Employee Ratio, 2004-2014")
p <- ggplot(data = yahoo, mapping = aes(x = Year, y = Revenue/Employees))
p + geom_line(color = "gray60", size = 2) +
geom_vline(xintercept = 2012) +
annotate("text", x = 2013, y = 0.44, label = " Mayer becomes CEO", size = 2.5) +
labs(x = "Year\n", y = "Revenue/Employees",
title = "Yahoo Revenue to Employee Ratio, 2004-2014")
## By defult, show code for all chunks in the knitted document,
## as well as the output. To override for a particular chunk
## use echo = FALSE in its options.
knitr::opts_chunk$set(echo = TRUE)
## Set the default size of figures
knitr::opts_chunk$set(fig.width=8, fig.height=5)
## Load the libraries we will be using
library(gapminder)
library(here)
library(socviz)
library(tidyverse)
head(studebt)
p_xlab <- "Amount Owed, in thousands of Dollars"
p_title <- "Outstanding Student Loans"
p_subtitle <- "44 million borrowers owe a total of $1.3 trillion"
p_caption <- "Source: FRB NY"
f_labs <- c(`Borrowers` = "Percent of \nall Borrowers",
`Balances` = "Percent of \nall Balances")
p <- ggplot(data = studebt, mapping = aes(x = Debt, y = pct/100, fill = type))
p +  geom_bar(stat = "identity") + scale_fill_brewer(type = "qual", palette = "Dark2") +
scale_y_continuous(labels = scales::percent) +
guides(fill = FALSE) +
theme(strip.text.x = element_text(face = "bold")) +
labs(y = NULL, x = p_xlab,
caption = p_caption,
title = p_title,
subtitle = p_subtitle) +
facet_grid(~type, labeller = as_labeller(f_labs)) +
coord_flip()
library(viridis)
p <- ggplot(studebt, aes(y = pct/100, x = type, fill = Debtrc))
p + geom_bar(stat = "identy", color = "gray80") +
scale_x_discrete(labels = as_labeller(f_labs)) +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis(discrete = TRUE) +
guides(fill = guide_legend(reverse = TRUE,
title.position = "top",
label.position = "bottom",
keywidth = 3,
nrow = 1)) +
labs(x = NULL, y = NULL,
fill = "Amount Owed, in thousands of dollars",
caption = p_caption,
title = p_title,
subtitle = p_subtitle) +
theme(legend.position = "top",
axis.text.y = element_text(face = "bold", hjust = 1, size = 12),
axis.ticks.length = unit(0, "cm"),
panel.grid.major.y = element_blank()) +
coord_flip()
library(viridis)
p <- ggplot(studebt, aes(y = pct/100, x = type, fill = Debtrc))
p + geom_bar(stat = "identity", color = "gray80") +
scale_x_discrete(labels = as_labeller(f_labs)) +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis(discrete = TRUE) +
guides(fill = guide_legend(reverse = TRUE,
title.position = "top",
label.position = "bottom",
keywidth = 3,
nrow = 1)) +
labs(x = NULL, y = NULL,
fill = "Amount Owed, in thousands of dollars",
caption = p_caption,
title = p_title,
subtitle = p_subtitle) +
theme(legend.position = "top",
axis.text.y = element_text(face = "bold", hjust = 1, size = 12),
axis.ticks.length = unit(0, "cm"),
panel.grid.major.y = element_blank()) +
coord_flip()
install.packages(c("backports", "callr", "clipr", "coda", "cowplot", "curl", "data.table", "dbplyr", "devtools", "digest", "dplyr", "ellipsis", "foreign", "gdtools", "ggplot2", "git2r", "haven", "hms", "htmltools", "htmlwidgets", "httr", "interactionTest", "knitr", "markdown", "mime", "modelr", "numDeriv", "openssl", "pillar", "pkgbuild", "pkgconfig", "prediction", "processx", "quantreg", "Rcpp", "remotes", "rlang", "rmarkdown", "srvyr", "sys", "tibble", "tidyr", "tinytex", "usethis", "vctrs", "whisker", "xfun", "xml2"))
lifecycle::last_warning()
lifecycle::last_warnings()
## By defult, show code for all chunks in the knitted document,
## as well as the output. To override for a particular chunk
## use echo = FALSE in its options.
knitr::opts_chunk$set(echo = TRUE)
## Set the default size of figures
knitr::opts_chunk$set(fig.width=8, fig.height=5)
## Load the libraries we will be using
library(gapminder)
library(here)
library(socviz)
library(tidyverse)
install.packages("fastmap")
library(tidyverse)
library(socviz)
url <- "https://cdn.rawgit.com/kjhealy/viz-organdata/master/organdonation.csv"
organs <- read_csv(file = url)
library(gapminder)
gapminder
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_point()
library(gapminder)
p <- ggplot(data = gapminder, mapping = aes(x = gdpPercap, y = lifeExp))
p + geom_smooth(method ="loess")+ geom_point(alpha = 0.3, mapping = aes(color = factor(year))) + scale_x_log10(labels = scales::dollar) + labs(x = "GDP Per Capita", y = "Life Expectancy in Years", title = "Economic Growth and Life Expectancy", subtitle = "Data points are country-years", caption = "Source: Gapminder.")
#ggsave(here("figures", "lifexp_vs_gdp_gradient.pdf"))
p <- ggplot(data = gapminder, mapping = aes(x = year, y = gdpPercap))
p + geom_line(aes(color = "gray70", group = country)) + geom_smooth(size = 1.1, method = "loess", se = FALSE) + scale_y_log10(labels = scales::dollar) + facet_wrap(~continent, ncol = 5) + labs(x = "Year", y = "GDP per capita", title = "GDP per capita on Five Continents")
p <- ggplot(data = gss_sm, mapping = aes( x = age, y = childs))
p + geom_point(alpha = 0.2) + geom_smooth() + facet_grid(sex ~ race)
p <- ggplot(data = gss_sm, mapping = aes(x = bigregion))
p + geom_bar(mapping = aes(y = ..prop.., group = 1))
p <- ggplot(data = gss_sm, mapping = aes(x = religion, fill = religion))
p + geom_bar() + guides(fill = FALSE)
p <- ggplot(data = gss_sm, mapping = aes(x = religion))
p + geom_bar(position = "dodge", mapping = aes(y = ..prop.., group = bigregion))+
facet_wrap(~bigregion, ncol = 2)
p <- ggplot(data = midwest, mapping = aes(x = area))
p + geom_histogram(bins = 10)
oh_wi <- c("OH", "WI")
p <- ggplot(data = subset(midwest, subset = state %in% oh_wi), mapping = aes(x = percollege, fill = state))
p + geom_histogram(alpha = 0.4, bins = 20)
p <- ggplot(data = midwest, mapping = aes(x = area))
p + geom_density()
p <- ggplot(data = midwest, mapping = aes(x = area, fill = state, color = state))
p + geom_density(alpha = 0.3)
p <- ggplot(data = subset(midwest,subset = state %in% oh_wi), mapping = aes(x = area, fill = state, color = state))
p + geom_density(alpha = 0.3, mapping = (aes(y = ..scaled..)))
p <- ggplot(data = titanic, mapping = aes(x = fate, y = percent, fill = sex))
p + geom_bar(position = "dodge", stat = "identity") + theme(legend.position ="top")
p <- ggplot(data = oecd_sum, mapping = aes(x = year, y = diff, fill = hi_lo))
p + geom_col() + guides(fill = FALSE) + labs(x = NULL, y = "Difference in Years", title = "The US Life Expectancy Gap", subtitle = "Difference between US and OECD average life expenctancies, 1960-2015", caption = ("Data: OECD, After a chart by Christopher Ingraham, Washington Post, December 27th, 2017."))
p <- ggplot(data = midwest, mapping = aes(x = percbelowpoverty, y = percollege))
p + geom_density_2d() + geom_point() + geom_smooth()
rel_by_region <- gss_sm %>%
group_by(bigregion, religion) %>%
summarize(N = n()) %>%
mutate (freq = N / sum(N), pct = round((freq*100),0))
p <- ggplot(rel_by_region, aes(x = bigregion, y = pct, fill = religion))
p + geom_col(position = "dodge2") + labs(x = "Region", y = "Percent", fill = "Religion") + theme(legend.position = "top")
p <- ggplot(rel_by_region, aes(x = religion, y = pct, fill = religion))
p + geom_col(position = "dodge2") + labs(x = NULL, y = "Percent", fill = "Religion") + guides(fill = FALSE) + coord_flip() + facet_grid(~bigregion)
p <- ggplot(data = organdata, mapping = aes(x = year, y = donors))
p + geom_line(aes(group = country)) + facet_wrap(~country)
p <- ggplot(data=organdata, mapping = aes(x = reorder(country, donors, na.rm = TRUE), y = donors, fill = world))
p + geom_boxplot() + labs(x = NULL) + coord_flip() + theme(legend.position = "top")
p <- ggplot(data = organdata, mapping = aes(x = reorder(country, donors, na.rm = TRUE), y = donors, color = world))
p + geom_jitter(position = position_jitter(width = 0.15)) + labs(x = NULL) + coord_flip() + theme(legend.position = "top")
by_country <- organdata %>% group_by(consent_law, country) %>% summarize(donors_mean = mean(donors, na.rm = TRUE), donors_sd = sd(donors, na.rm = TRUE), gdp_mean = mean( gdp, na.rm = TRUE), health_mean = mean(health, na.rm = TRUE), roads_mean = mean(roads, na.rm = TRUE), cerebvas_mean = mean(cerebvas, na.rm = TRUE))
by_country <- organdata %>% group_by(consent_law, country) %>% summarize_if(is.numeric, funs(mean, sd), na.rm =
TRUE) %>% ungroup()
p <- ggplot(data = by_country, mapping = aes(x = donors_mean, y = reorder(country, donors_mean), color = consent_law))
p + geom_point(size = 3) + labs(x = "Donor Procurement Rate", y = "", color = "Consent Law") + theme(legend.position = "top")
p <- ggplot(data = by_country, mapping = aes(x = donors_mean, y = reorder(country, donors_mean)))
p + geom_point(size = 3) + facet_wrap(~consent_law, scales = "free_y", ncol = 1) + labs(x = "Donor Procurement Rate", y = "")
p <- ggplot(data = by_country, mapping = aes(x = reorder(country, donors_mean), y = donors_mean))
p + geom_pointrange(mapping = aes(ymin = donors_mean - donors_sd, ymax = donors_mean + donors_sd)) + labs(x = "Donor Procurement Rate", y = "") + coord_flip()
p <- ggplot(data = by_country, mapping = aes(x = roads_mean, y = donors_mean))
p + geom_point() + geom_text(mapping = aes(label = country),hjust = 0)
library(ggrepel)
p_title <- "Presidential Elections: Popular & Electoral College Margins"
p_subtitle <- "1824-2016"
p_caption <- "Data for 2016 are provisional"
x_label <- "Winner's share of Popular Vote"
y_label <- "Winner's share of Electoral College Vote"
p <- ggplot(elections_historic, aes(x = popular_pct, y = ec_pct, label = winner_label, color = win_party))
p + geom_hline(yintercept = 0.5, size = 1.4, color = "gray80") +
geom_vline(xintercept = 0.5, size = 1.4, color = "gray80") +
geom_point() +
geom_text_repel() +
scale_x_continuous(labels = scales::percent) +
scale_y_continuous(labels = scales::percent) +
labs(x = x_label, y = y_label, title = p_title, subtitle = p_subtitle, caption = p_caption)
p <- ggplot(data = by_country, mapping = aes(x = gdp_mean, y = health_mean))
p + geom_point() + geom_text_repel(data = subset(by_country, gdp_mean > 25000), mapping = aes(label = country))
p <- ggplot(data = by_country, mapping = aes(x = gdp_mean, y = health_mean))
p + geom_point() + geom_text_repel(data = subset(by_country, gdp_mean > 25000 | health_mean < 1500), mapping = aes(label = country))
organdata$ind <- organdata$ccode %in% c("Ita", "Spa") & organdata$year > 1998
p <- ggplot(data = organdata, mapping = aes(x = roads, y = donors, color = ind))
p + geom_point() + geom_text_repel(data = subset(organdata, ind), mapping = aes(label = ccode)) + guides(label = FALSE, color = FALSE)
p <- ggplot2::ggplot(data = organdata, mapping = aes(x = roads, y = donors))
p + geom_point() + annotate(geom = "text", x = 91, y = 35, label = "A surprisingly high \n recovery rate.", hjust = 0)
p <- ggplot2::ggplot(data = organdata, mapping = aes(x = roads, y = donors))
p + geom_point() + annotate(geom = "rect", xmin = 125, xmax = 155, ymin = 30, ymax = 35, fill = "red", alpha = 0.2) + annotate(geom = "text", x = 157, y = 33, label = "A surprisingly high \n recovery rate.", hjust = 0 )
p <- ggplot2::ggplot(data = organdata, mapping = aes(x = roads, y = donors, color = world))
p + geom_point() + scale_x_log10() + scale_y_continuous(breaks = c(5, 15, 25), labels = c("Five", "Fifteen", "Twenty Five"))
p <- ggplot2::ggplot(data = organdata, mapping = aes(x = roads, y = donors, color = world))
p + geom_point() + scale_color_discrete(labels = c("Corporatist", "Liberal", "Social Democratic", "Unclassified")) + labs(x = "Road Deaths", y = "Donor Procurement", color = "Welfare State") + theme(legend.position = "top")
p <- ggplot(data = gapminder, mapping = aes(x = log(gdpPercap), y = lifeExp))
p + geom_point(alpha = 0.1) + geom_smooth(color = "tomato", fill = "tomato", method = MASS::rlm) + geom_smooth(color = "steelblue", fill = "steelblue", method = "lm")
p + geom_point(alpha=0.1) + geom_smooth(color = "tomato", method = "lm", size = 1.2, formula = y ~ splines::bs(x, 3), se = FALSE)
p + geom_point(alpha=0.1) + geom_quantile(color = "tomato", size = 1.2, method = "rqss", lambda = 1, quantiles = c(0.20, 0.5, 0.85))
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder, mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) + geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) + geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3), aes(color = "Cubic Spline", fill = "Cubic Spline")) + geom_smooth(method = "loess", aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) + scale_fill_manual(name = "Models", values = model_colors) + theme(legend.position = "top")
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent, data = gapminder)
summary(out)
min_gdp <- min(gapminder$gdpPercap)
max_gdp <- max(gapminder$gdpPercap)
med_pop <- median(gapminder$pop)
pred_df <- expand.grid(gdpPercap = (seq(from = min_gdp, to = max_gdp, length.out = 100)), pop = med_pop, continent = c("Africa", "Americas", "Asia", "Europe", "Oceania"))
dim(pred_df)
pred_out <- predict(object = out, newdata = pred_df, interval = "predict")
head(pred_out)
pred_df <- cbind(pred_df, pred_out)
head(pred_df)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")), aes(x = gdpPercap, y = fit, ymin = lwr, ymax = upr, color = continent, fill = continent, group = continent))
p + geom_point(data = subset(gapminder, continent %in% c("Europe","Africa")), aes(x = gdpPercap, y = lifeExp, color = continent), alpha = 0.5, inherit.aes = FALSE) + geom_line() + geom_ribbon(alpha = 0.2, color = FALSE) + scale_x_log10(labels = scales::dollar) + theme(legend.position = "top")
library(broom)
out_comp <- tidy(out)
out_comp %>% round_df()
p <- ggplot(out_comp, mapping = aes(x = term, y = estimate))
p + geom_point()+ coord_flip()
out_conf <- tidy(out, conf.int = TRUE)
out_conf %>% round_df()
out_conf <- subset(out_conf, term %nin% "(Intercept)")
out_conf$nicelabs <- prefix_strip(out_conf$term, "continent")
p <- ggplot(out_conf, mapping = aes(x = reorder(nicelabs, estimate),y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
out_aug <- augment(out, data = gapminder)
head(out_aug) %>% round_df()
p <- ggplot(data = out_aug, mapping = aes(x = .fitted, y = .resid))
p + geom_point()
glance(out) %>% round_df()
library(survival)
out_cph <- coxph(Surv(time, status) ~ age + sex, data = lung)
out_surv <- survfit(out_cph)
out_tidy <- tidy(out_surv)
p <- ggplot(data = out_tidy, mapping = aes(time, estimate))
p + geom_line() + geom_ribbon(mapping = aes(ymin = conf.low, ymax = conf.high), alpha = 0.2)
eu77 <- gapminder %>% filter(continent == "Europe", year == 1977)
fit <- lm(lifeExp ~ log(gdpPercap), data = eu77)
summary(fit)
out_le <- gapminder %>% group_by(continent, year) %>% nest()
out_le
out_le %>% filter(continent == "Europe" & year == 1977) %>% unnest()
fit_ols <- function(df) {
lm(lifeExp ~ log(gdpPercap), data = df)
}
out_tidy <- gapminder %>% group_by(continent, year) %>% nest() %>% mutate(model = map(data, fit_ols), tidied = map(model, tidy)) %>% unnest(tidied, .drop = TRUE) %>% filter(term %nin% "(Intercept)" & continent %nin% "Oceania")
out_tidy %>% sample_n(5)
p <- ggplot(data = gapminder, mapping = aes(x = log(gdpPercap), y = lifeExp))
p + geom_point(alpha = 0.1) + geom_smooth(color = "tomato", fill = "tomato", method = MASS::rlm) + geom_smooth(color = "steelblue", fill = "steelblue", method = "lm")
p + geom_point(alpha=0.1) + geom_smooth(color = "tomato", method = "lm", size = 1.2, formula = y ~ splines::bs(x, 3), se = FALSE)
p + geom_point(alpha=0.1) + geom_quantile(color = "tomato", size = 1.2, method = "rqss", lambda = 1, quantiles = c(0.20, 0.5, 0.85))
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder, mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) + geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) + geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3), aes(color = "Cubic Spline", fill = "Cubic Spline")) + geom_smooth(method = "loess", aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) + scale_fill_manual(name = "Models", values = model_colors) + theme(legend.position = "top")
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent, data = gapminder)
summary(out)
min_gdp <- min(gapminder$gdpPercap)
max_gdp <- max(gapminder$gdpPercap)
med_pop <- median(gapminder$pop)
pred_df <- expand.grid(gdpPercap = (seq(from = min_gdp, to = max_gdp, length.out = 100)), pop = med_pop, continent = c("Africa", "Americas", "Asia", "Europe", "Oceania"))
dim(pred_df)
pred_out <- predict(object = out, newdata = pred_df, interval = "predict")
head(pred_out)
pred_df <- cbind(pred_df, pred_out)
head(pred_df)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")), aes(x = gdpPercap, y = fit, ymin = lwr, ymax = upr, color = continent, fill = continent, group = continent))
p + geom_point(data = subset(gapminder, continent %in% c("Europe","Africa")), aes(x = gdpPercap, y = lifeExp, color = continent), alpha = 0.5, inherit.aes = FALSE) + geom_line() + geom_ribbon(alpha = 0.2, color = FALSE) + scale_x_log10(labels = scales::dollar) + theme(legend.position = "top")
library(broom)
out_comp <- tidy(out)
out_comp %>% round_df()
p <- ggplot(out_comp, mapping = aes(x = term, y = estimate))
p + geom_point()+ coord_flip()
out_conf <- tidy(out, conf.int = TRUE)
out_conf %>% round_df()
out_conf <- subset(out_conf, term %nin% "(Intercept)")
out_conf$nicelabs <- prefix_strip(out_conf$term, "continent")
p <- ggplot(out_conf, mapping = aes(x = reorder(nicelabs, estimate),y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
out_aug <- augment(out, data = gapminder)
head(out_aug) %>% round_df()
p <- ggplot(data = out_aug, mapping = aes(x = .fitted, y = .resid))
p + geom_point()
glance(out) %>% round_df()
library(survival)
out_cph <- coxph(Surv(time, status) ~ age + sex, data = lung)
out_surv <- survfit(out_cph)
out_tidy <- tidy(out_surv)
p <- ggplot(data = out_tidy, mapping = aes(time, estimate))
p + geom_line() + geom_ribbon(mapping = aes(ymin = conf.low, ymax = conf.high), alpha = 0.2)
eu77 <- gapminder %>% filter(continent == "Europe", year == 1977)
fit <- lm(lifeExp ~ log(gdpPercap), data = eu77)
summary(fit)
out_le <- gapminder %>% group_by(continent, year) %>% nest()
out_le
out_le %>% filter(continent == "Europe" & year == 1977) %>% unnest()
fit_ols <- function(df) {
lm(lifeExp ~ log(gdpPercap), data = df)
}
out_tidy <- gapminder %>% group_by(continent, year) %>% nest() %>% mutate(model = map(data, fit_ols), tidied = map(model, tidy)) %>% unnest(tidied, .drop = TRUE) %>% filter(term %nin% "(Intercept)" & continent %nin% "Oceania")
out_tidy %>% sample_n(5)
p <- ggplot(data = gapminder, mapping = aes(x = log(gdpPercap), y = lifeExp))
p + geom_point(alpha = 0.1) + geom_smooth(color = "tomato", fill = "tomato", method = MASS::rlm) + geom_smooth(color = "steelblue", fill = "steelblue", method = "lm")
p + geom_point(alpha=0.1) + geom_smooth(color = "tomato", method = "lm", size = 1.2, formula = y ~ splines::bs(x, 3), se = FALSE)
p + geom_point(alpha=0.1) + geom_quantile(color = "tomato", size = 1.2, method = "rqss", lambda = 1, quantiles = c(0.20, 0.5, 0.85))
model_colors <- RColorBrewer::brewer.pal(3, "Set1")
model_colors
p0 <- ggplot(data = gapminder, mapping = aes(x = log(gdpPercap), y = lifeExp))
p1 <- p0 + geom_point(alpha = 0.2) + geom_smooth(method = "lm", aes(color = "OLS", fill = "OLS")) + geom_smooth(method = "lm", formula = y ~ splines::bs(x, df = 3), aes(color = "Cubic Spline", fill = "Cubic Spline")) + geom_smooth(method = "loess", aes(color = "LOESS", fill = "LOESS"))
p1 + scale_color_manual(name = "Models", values = model_colors) + scale_fill_manual(name = "Models", values = model_colors) + theme(legend.position = "top")
out <- lm(formula = lifeExp ~ gdpPercap + pop + continent, data = gapminder)
summary(out)
min_gdp <- min(gapminder$gdpPercap)
max_gdp <- max(gapminder$gdpPercap)
med_pop <- median(gapminder$pop)
pred_df <- expand.grid(gdpPercap = (seq(from = min_gdp, to = max_gdp, length.out = 100)), pop = med_pop, continent = c("Africa", "Americas", "Asia", "Europe", "Oceania"))
dim(pred_df)
pred_out <- predict(object = out, newdata = pred_df, interval = "predict")
head(pred_out)
pred_df <- cbind(pred_df, pred_out)
head(pred_df)
p <- ggplot(data = subset(pred_df, continent %in% c("Europe", "Africa")), aes(x = gdpPercap, y = fit, ymin = lwr, ymax = upr, color = continent, fill = continent, group = continent))
p + geom_point(data = subset(gapminder, continent %in% c("Europe","Africa")), aes(x = gdpPercap, y = lifeExp, color = continent), alpha = 0.5, inherit.aes = FALSE) + geom_line() + geom_ribbon(alpha = 0.2, color = FALSE) + scale_x_log10(labels = scales::dollar) + theme(legend.position = "top")
library(broom)
out_comp <- tidy(out)
out_comp %>% round_df()
p <- ggplot(out_comp, mapping = aes(x = term, y = estimate))
p + geom_point()+ coord_flip()
out_conf <- tidy(out, conf.int = TRUE)
out_conf %>% round_df()
out_conf <- subset(out_conf, term %nin% "(Intercept)")
out_conf$nicelabs <- prefix_strip(out_conf$term, "continent")
p <- ggplot(out_conf, mapping = aes(x = reorder(nicelabs, estimate),y = estimate, ymin = conf.low, ymax = conf.high))
p + geom_pointrange() + coord_flip() + labs(x = "", y = "OLS Estimate")
out_aug <- augment(out, data = gapminder)
head(out_aug) %>% round_df()
p <- ggplot(data = out_aug, mapping = aes(x = .fitted, y = .resid))
p + geom_point()
glance(out) %>% round_df()
library(survival)
out_cph <- coxph(Surv(time, status) ~ age + sex, data = lung)
out_surv <- survfit(out_cph)
out_tidy <- tidy(out_surv)
p <- ggplot(data = out_tidy, mapping = aes(time, estimate))
p + geom_line() + geom_ribbon(mapping = aes(ymin = conf.low, ymax = conf.high), alpha = 0.2)
eu77 <- gapminder %>% filter(continent == "Europe", year == 1977)
fit <- lm(lifeExp ~ log(gdpPercap), data = eu77)
summary(fit)
out_le <- gapminder %>% group_by(continent, year) %>% nest()
out_le
out_le %>% filter(continent == "Europe" & year == 1977) %>% unnest()
fit_ols <- function(df) {
lm(lifeExp ~ log(gdpPercap), data = df)
}
out_tidy <- gapminder %>% group_by(continent, year) %>% nest() %>% mutate(model = map(data, fit_ols), tidied = map(model, tidy)) %>% unnest(tidied, .drop = TRUE) %>% filter(term %nin% "(Intercept)" & continent %nin% "Oceania")
out_tidy %>% sample_n(5)
p <- ggplot(data = out_tidy, mapping = aes(x = year, y = estimate, ymin = estimate - 2*std.error, ymax = estimate + 2*std.error, group = continent, color = continent))
p + geom_pointrange(position = position_dodge(width = 1)) + scale_x_continuous(breaks = unique(gapminder$year)) + theme(legend.position = "top") + labs(x = "Year", y = "Estimate", color = "Continent")
library(margins)
gss_sm$polviews_m <- relevel(gss_sm$polviews, ref = "Moderate")
out_bo <- glm(obama ~ polviews_m + sex*race, family = "binomial", data = gss_sm)
summary(out_bo)
bo_m <- margins(out_bo)
summary(bo_m)
bo_gg <- as_tibble(summary(bo_m))
prefixes <- c("polviews_m", "sex")
bo_gg$factor <- prefix_strip(bo_gg$factor, prefixes)
bo_gg$factor <- prefix_replace(bo_gg$factor, "race", "Race: ")
bo_gg %>% select(factor, AME, lower, upper)
p <- ggplot(data = bo_gg, aes(x = reorder(factor, AME), y = AME, ymin = lower, ymax = upper))
p + geom_hline(yintercept = 0, color = "gray80") + geom_pointrange() + coord_flip() + labs(x = NULL, y = "Average Marginal Effect")
pv_cp <- cplot(out_bo, x = "sex", draw = FALSE)
p <- ggplot(data = pv_cp,aes(x = reorder(xvals, yvals),y = yvals, ymin = lower, ymax = upper))
p + geom_hline(yintercept = 0, color = "gray80") + geom_pointrange() + coord_flip() + labs(x = NULL, y = "Conditional Effect")
library(survey)
library(srvyr)
options(survey.lonely.psu = "adjust")
options(na.action = "na.pass")
git
